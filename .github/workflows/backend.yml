name: Backend

run-name: ${{ github.event_name }} to ${{ github.ref_name }} by @${{ github.actor }}

on:
  push:
    paths:
      - backend/**

env:
  path: ./backend
  version: "3.11"

jobs:
  linting_black:
    name: Linting with black
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.version }}
          cache: "pip"

      - name: Install black
        run: pip install black

      - name: Run black
        run: black --check ${{ env.path }}

  linting_flake8:
    name: Linting with flake8
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.version }}
          cache: "pip"

      - name: Install flake8
        run: pip install flake8 Flake8-pyproject

      - name: Flake8 linting
        run: |
          cd ${{ env.path }}
          flake8 .

  typing_mypy:
    name: Checking static types with mypy
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@v4

      - name: Install Poetry
        run: pip install poetry

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.version }}
          cache: "poetry"

      - name: Install dependencies
        run: |
          cd ${{ env.path }}
          poetry install

      - name: Mypy checking
        run: |
          cd ${{ env.path }}
          poetry run mypy .

  typing_mypy:
    name: Checking static types with mypy
    runs-on: ubuntu-latest
    needs: [  typing_mypy, linting_black, linting_flake8 ]
    steps:
      - name: Get repository code
        uses: actions/checkout@v4

      - name: Login to Yandex Cloud Container Registry
        uses: yc-actions/yc-cr-login@v1
        with: yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build docker image
        run: docker build -t cr.yandex/${{ secrets.CR_REGISTRY }}/${{ secrets.CR_REPOSITORY }}:latest .

      - name: Push docker image to Yandex Cloud Container Registry
        run: docker push cr.yandex/${{ secrets.CR_REGISTRY }}/${{ secrets.CR_REPOSITORY }}:latest
